{"version":3,"sources":["../src/scripts.js"],"names":["ToDoClass","tasks","JSON","parse","localStorage","getItem","task","isComplete","loadTasks","addEventListeners","document","getElementById","addEventListener","event","keyCode","addTask","target","value","taskHtml","reduce","html","index","generateTaskHtml","innerHTML","taskIndex","preventDefault","splice","newTask","parentDiv","parentElement","classList","add","remove","push","setItem","stringify","toDo","window"],"mappings":";;;;;;IAAMA,S;AACF,yBAAc;AAAA;;AACV,aAAKC,KAAL,GAAaC,KAAKC,KAAL,CAAWC,aAAaC,OAAb,CAAqB,OAArB,CAAX,CAAb;;AAEA,YAAG,CAAC,KAAKJ,KAAT,EAAgB;AACZ,iBAAKA,KAAL,GAAa,CACT,EAACK,MAAM,mBAAP,EAA4BC,YAAY,KAAxC,EADS,EAET,EAACD,MAAM,cAAP,EAAuBC,YAAY,IAAnC,EAFS,EAGT,EAACD,MAAM,uBAAP,EAAgCC,YAAY,KAA5C,EAHS,CAAb;AAKH;;AAED,aAAKC,SAAL;AACA,aAAKC,iBAAL;AACH;;;;4CAEmB;AAAA;;AAChBC,qBAASC,cAAT,CAAwB,SAAxB,EAAmCC,gBAAnC,CAAoD,UAApD,EAAgE,iBAAS;AACrE,oBAAGC,MAAMC,OAAN,KAAkB,EAArB,EAAyB;AACrB,0BAAKC,OAAL,CAAaF,MAAMG,MAAN,CAAaC,KAA1B;AACAJ,0BAAMG,MAAN,CAAaC,KAAb,GAAqB,EAArB;AACH;AACJ,aALD;AAMH;;;oCAEW;AAAA;;AACR,gBAAIC,WAAW,KAAKjB,KAAL,CAAWkB,MAAX,CAAkB,UAACC,IAAD,EAAOd,IAAP,EAAae,KAAb;AAAA,uBAAuBD,QAAQ,OAAKE,gBAAL,CAAsBhB,IAAtB,EAA4Be,KAA5B,CAA/B;AAAA,aAAlB,EAAqF,EAArF,CAAf;AACAX,qBAASC,cAAT,CAAwB,UAAxB,EAAoCY,SAApC,GAAgDL,QAAhD;AACH;;;yCAEgBZ,I,EAAMe,K,EAAO;AAC1B,uUAKkDA,KALlD,wDAMkBf,KAAKC,UAAL,GAAgB,SAAhB,GAA0B,EAN5C,mIAQ4ED,KAAKC,UAAL,GAAgB,UAAhB,GAA2B,EARvG,qCASkBD,KAAKA,IATvB,2MAYuEe,KAZvE,iEAa8CA,KAb9C;AAkBH;;;yCAEgBA,K,EAAO;AACpB,iBAAKpB,KAAL,CAAWoB,KAAX,EAAkBd,UAAlB,GAA+B,CAAC,KAAKN,KAAL,CAAWoB,KAAX,EAAkBd,UAAlD;AACA,iBAAKC,SAAL;AACH;;;mCAEUK,K,EAAOW,S,EAAW;AACzBX,kBAAMY,cAAN;AACA,iBAAKxB,KAAL,CAAWyB,MAAX,CAAkBF,SAAlB,EAA6B,CAA7B;AACA,iBAAKhB,SAAL;AACH;;;uCAEc;AACX,gBAAIQ,SAASN,SAASC,cAAT,CAAwB,SAAxB,CAAb;AACA,iBAAKI,OAAL,CAAaC,OAAOC,KAApB;AACAD,mBAAOC,KAAP,GAAe,EAAf;AACH;;;gCAEOX,I,EAAM;AACV,gBAAIqB,UAAU;AACVrB,0BADU;AAEVC,4BAAY;AAFF,aAAd;;AAKA,gBAAIqB,YAAYlB,SAASC,cAAT,CAAwB,SAAxB,EAAmCkB,aAAnD;;AAEA,gBAAGvB,SAAS,EAAZ,EAAgB;AACZsB,0BAAUE,SAAV,CAAoBC,GAApB,CAAwB,YAAxB;AACH,aAFD,MAEO;AACHH,0BAAUE,SAAV,CAAoBE,MAApB,CAA2B,YAA3B;AACA,qBAAK/B,KAAL,CAAWgC,IAAX,CAAgBN,OAAhB;AACA,qBAAKnB,SAAL;AACH;;AAEDJ,yBAAa8B,OAAb,CAAqB,OAArB,EAA8BhC,KAAKiC,SAAL,CAAe,KAAKlC,KAApB,CAA9B;AACH;;;;;;AAGL,IAAImC,aAAJ;;AAEAC,OAAOzB,gBAAP,CAAwB,MAAxB,EAAgC,YAAM;AAClCwB,WAAO,IAAIpC,SAAJ,EAAP;AACH,CAFD","file":"scripts.js","sourcesContent":["class ToDoClass {\r\n    constructor() {\r\n        this.tasks = JSON.parse(localStorage.getItem('TASKS'));\r\n\r\n        if(!this.tasks) {\r\n            this.tasks = [\r\n                {task: 'Go to the dentist', isComplete: false},\r\n                {task: 'Do gardening', isComplete: true},\r\n                {task: 'Renew library account', isComplete: false}\r\n            ];\r\n        }\r\n\r\n        this.loadTasks();\r\n        this.addEventListeners();\r\n    }\r\n\r\n    addEventListeners() {\r\n        document.getElementById('addTask').addEventListener('keypress', event => {\r\n            if(event.keyCode === 13) {\r\n                this.addTask(event.target.value);\r\n                event.target.value = '';\r\n            }\r\n        })\r\n    }\r\n\r\n    loadTasks() {\r\n        let taskHtml = this.tasks.reduce((html, task, index) => html += this.generateTaskHtml(task, index), '');\r\n        document.getElementById('taskList').innerHTML = taskHtml;\r\n    }\r\n\r\n    generateTaskHtml(task, index) {\r\n        return `\r\n            <li class=\"list-group-item checkbox\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-1 col-xs-1 col-lg-1 col-sm-1 checkbox\">\r\n                        <label><input id=\"toggleTaskStatus\" type=\"checkbox\"  \r\n                        onchange=\"toDo.toggleTaskStatus(${index})\" value=\"\" class=\"\" \r\n                        ${task.isComplete?'checked':''}></label>\r\n                    </div>\r\n                    <div class=\"col-md-10 col-xs-10 col-lg-10 col-sm-10 task-text ${task.isComplete?'complete':''}\">\r\n                        ${task.task}\r\n                    </div>\r\n                    <div class=\"col-md-1 col-xs-1 col-lg-1 col-sm-1 delete-icon-area\">\r\n                        <a class=\"\" href=\"/\" onClick=\"toDo.deleteTask(event, ${index})\">\r\n                        <i id=\"deleteTask\" data-id=\"${index}\" class=\"delete-icon far fa-trash-alt\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        `;\r\n    }\r\n\r\n    toggleTaskStatus(index) {\r\n        this.tasks[index].isComplete = !this.tasks[index].isComplete;\r\n        this.loadTasks();\r\n    }\r\n\r\n    deleteTask(event, taskIndex) {\r\n        event.preventDefault();\r\n        this.tasks.splice(taskIndex, 1);\r\n        this.loadTasks();\r\n    }\r\n\r\n    addTaskClick() {\r\n        let target = document.getElementById('addTask');\r\n        this.addTask(target.value);\r\n        target.value = \"\";\r\n    }\r\n\r\n    addTask(task) {\r\n        let newTask = {\r\n            task,\r\n            isComplete: false\r\n        }\r\n\r\n        let parentDiv = document.getElementById('addTask').parentElement;\r\n\r\n        if(task === '') {\r\n            parentDiv.classList.add('has-danger');\r\n        } else {\r\n            parentDiv.classList.remove('has-danger');\r\n            this.tasks.push(newTask);\r\n            this.loadTasks();\r\n        }\r\n\r\n        localStorage.setItem('TASKS', JSON.stringify(this.tasks));\r\n    }\r\n}\r\n\r\nlet toDo;\r\n\r\nwindow.addEventListener(\"load\", () => {\r\n    toDo = new ToDoClass();\r\n});"]}